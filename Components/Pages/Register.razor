@page "/register"
@layout MainLayout

<h1>Register</h1>

<div class="login-container">
    <h1 class="title text-center">Create an Account</h1>
    <form>
        <div class="form-group">
            <label for="firstname">First Name</label>
            <input type="text" id="firstname" @bind="FirstName" placeholder="Enter your first name" class="form-control" />
        </div>
        <div class="form-group">
            <label for="lastname">Last Name</label>
            <input type="text" id="lastname" @bind="LastName" placeholder="Enter your last name" class="form-control" />
        </div>
        <div class="form-group">
            <label for="email">Email Address</label>
            <input type="email" id="email" @bind="Email" placeholder="Enter your email" class="form-control" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <input type="password" id="password" @bind="Password" placeholder="Enter your password" class="form-control" />
        </div>
        <div class="form-group">
            <label for="confirmPassword">Confirm Password</label>
            <input type="password" id="confirmPassword" @bind="ConfirmPassword" placeholder="Confirm your password" class="form-control" />
        </div>
        <button type="button" @onclick="HandleRegister" class="btn btn-primary btn-block">Register</button>
    </form>

    <div class="mt-3 text-center">
        <p>Already have an account? <a href="/login">Login here</a></p>
    </div>
</div>

@code {
    private string FirstName { get; set; }
    private string LastName { get; set; }
    private string Email { get; set; }
    private string Password { get; set; }
    private string ConfirmPassword { get; set; }

    private async Task HandleRegister()
    {
        if (Password != ConfirmPassword)
        {
            // Show an error message for mismatched passwords
            await JSRuntime.InvokeVoidAsync("showCustomAlert", "Passwords do not match.");
            return;
        }

        // Perform registration logic here (e.g., API call to register the user)
        await JSRuntime.InvokeVoidAsync("showCustomAlert", $"Registered successfully! Name: {FirstName} {LastName}");
    }

    [Inject] private IJSRuntime JSRuntime { get; set; }
}
