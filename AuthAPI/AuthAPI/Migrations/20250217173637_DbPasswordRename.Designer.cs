// <auto-generated />
using AuthAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AuthAPI.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20250217173637_DbPasswordRename")]
    partial class DbPasswordRename
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.2");

            modelBuilder.Entity("AuthAPI.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("SomfyAPI.Models.Attribute", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("EntityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("EntityId");

                    b.ToTable("Attribute");
                });

            modelBuilder.Entity("SomfyAPI.Models.Command", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("CommandName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("DefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Nparams")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("DefinitionId");

                    b.ToTable("Command");
                });

            modelBuilder.Entity("SomfyAPI.Models.Connectivity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("ProtocolVersion")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Connectivity");
                });

            modelBuilder.Entity("SomfyAPI.Models.Definition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("QualifiedName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UiClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.PrimitiveCollection<string>("UiProfiles")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("WidgetName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Definition");
                });

            modelBuilder.Entity("SomfyAPI.Models.Device", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Alive")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutoUpdateEnabled")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("AutomaticUpdate")
                        .HasColumnType("INTEGER");

                    b.Property<int>("ConnectivityId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Functions")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("GatewayId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Mode")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("SubType")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("SyncInProgress")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("TimeReliable")
                        .HasColumnType("INTEGER");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<bool>("UpToDate")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UpdateCriticityLevel")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("UpdateStatus")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("ConnectivityId");

                    b.HasIndex("UserId");

                    b.ToTable("Device");
                });

            modelBuilder.Entity("SomfyAPI.Models.Entity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<bool>("Available")
                        .HasColumnType("INTEGER");

                    b.Property<string>("ControllableName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("CreationTime")
                        .HasColumnType("INTEGER");

                    b.Property<int>("DefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DeviceURL")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("Enabled")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Label")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<long>("LastUpdateTime")
                        .HasColumnType("INTEGER");

                    b.Property<string>("OID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("PlaceOID")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Type")
                        .HasColumnType("INTEGER");

                    b.Property<string>("UiClass")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int?>("UserId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Widget")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DefinitionId");

                    b.HasIndex("UserId");

                    b.ToTable("Entity");
                });

            modelBuilder.Entity("SomfyAPI.Models.State", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("DefinitionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DefinitionId");

                    b.ToTable("State");
                });

            modelBuilder.Entity("SomfyAPI.Models.Attribute", b =>
                {
                    b.HasOne("SomfyAPI.Models.Entity", null)
                        .WithMany("Attributes")
                        .HasForeignKey("EntityId");
                });

            modelBuilder.Entity("SomfyAPI.Models.Command", b =>
                {
                    b.HasOne("SomfyAPI.Models.Definition", null)
                        .WithMany("Commands")
                        .HasForeignKey("DefinitionId");
                });

            modelBuilder.Entity("SomfyAPI.Models.Device", b =>
                {
                    b.HasOne("SomfyAPI.Models.Connectivity", "Connectivity")
                        .WithMany()
                        .HasForeignKey("ConnectivityId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthAPI.Models.User", null)
                        .WithMany("Devices")
                        .HasForeignKey("UserId");

                    b.Navigation("Connectivity");
                });

            modelBuilder.Entity("SomfyAPI.Models.Entity", b =>
                {
                    b.HasOne("SomfyAPI.Models.Definition", "Definition")
                        .WithMany()
                        .HasForeignKey("DefinitionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("AuthAPI.Models.User", null)
                        .WithMany("Entities")
                        .HasForeignKey("UserId");

                    b.Navigation("Definition");
                });

            modelBuilder.Entity("SomfyAPI.Models.State", b =>
                {
                    b.HasOne("SomfyAPI.Models.Definition", null)
                        .WithMany("States")
                        .HasForeignKey("DefinitionId");
                });

            modelBuilder.Entity("AuthAPI.Models.User", b =>
                {
                    b.Navigation("Devices");

                    b.Navigation("Entities");
                });

            modelBuilder.Entity("SomfyAPI.Models.Definition", b =>
                {
                    b.Navigation("Commands");

                    b.Navigation("States");
                });

            modelBuilder.Entity("SomfyAPI.Models.Entity", b =>
                {
                    b.Navigation("Attributes");
                });
#pragma warning restore 612, 618
        }
    }
}
