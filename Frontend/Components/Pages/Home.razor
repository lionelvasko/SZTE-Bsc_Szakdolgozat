@page "/"
@using Microsoft.AspNetCore.Authorization
@attribute [Authorize]

<div class="d-flex flex-column min-vh-100">

    <div class="container my-4">

        <ul class="nav nav-pills justify-content-center">
            <li class="nav-item flex-grow-1 text-center">
                <a class="nav-link @GetTabClass(1) py-3" @onclick="() => SetActiveTab(1)" style="font-size: 1.25rem; cursor: pointer; transition: all 0.3s; border-radius: 1.5rem;">
                    @Localizer["Entities"]
                </a>
            </li>
            <li class="nav-item flex-grow-1 text-center">
                <a class="nav-link @GetTabClass(2) py-3" @onclick="() => SetActiveTab(2)" style="font-size: 1.25rem; cursor: pointer; transition: all 0.3s; border-radius: 1.5rem;">
                    @Localizer["Devices"]
                </a>
            </li>
        </ul>
    </div>
    <div class="tab-content" id="dashboardTabContent">
        <div class="tab-pane fade @GetTabClass(1)" id="entities" role="tabpanel" aria-labelledby="entitiesTab">
            <h4 class="mt-4">@Localizer["Entities"]</h4>
            <div class="row g-3">
                @foreach (var entity in entities)
                {
                    if(entity.Platform == "Somfy")
                    {
                        <div class="col-12 col-md-4 col-lg-3">
                            <div class="card border-primary shadow-lg rounded bg-transparent" style="cursor: pointer;">
                                <div class="card-body">
                                    <div @onclick="() => ShowEntityDetails(entity)">
                                        <h5 class="card-title">@entity.Name</h5>
                                    </div>
                                    <div class="d-flex flex-column gap-2 mt-3">
                                        <div class="d-flex flex-column gap-2 mt-3">
                                                    <button class="btn btn-success" @onclick="async () => await SomfyAPI.Services.ShutterControl.OpenShutter(entity.Id)">@Localizer["Open"]</button>
                                                    <button class="btn btn-warning" @onclick="async () => await SomfyAPI.Services.ShutterControl.StopShutter(entity.Id)">@Localizer["Stop"]</button>
                                                    <button class="btn btn-danger" @onclick="async () => await SomfyAPI.Services.ShutterControl.CloseShutter(entity.Id)">@Localizer["Close"]</button>
                                                    <button class="btn btn-info" @onclick="async () => await SomfyAPI.Services.ShutterControl.MyPositionShutter(entity.Id)">@Localizer["My position"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }
                    else
                    {
                        <div class="col-12 col-md-4 col-lg-3">
                            <div class="card border-primary shadow-lg rounded bg-transparent" style="cursor: pointer;">
                                <div class="card-body">
                                    <div @onclick="() => ShowEntityDetails(entity)">
                                        <h5 class="card-title">@entity.Name</h5>
                                        <img src="@entity.Icon" alt="@entity.Name" style="width: 100px; height: 100px;" />
                                    </div>
                                    <div class="d-flex flex-column gap-2 mt-3">
                                        <div class="d-flex flex-column gap-2 mt-3">
                                                    <button class="btn btn-success" @onclick="async () => await TuyaAPI.Services.ControlLights.ToggleDeviceAsync(entity.Id, true)">@Localizer["On/Off"]</button>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    }

                }
            </div>
        </div>
        <div class="tab-pane fade @GetTabClass(2)" id="devices" role="tabpanel" aria-labelledby="devicesTab">
            <h4 class="mt-4">@Localizer["Devices"]</h4>
            <div class="row g-3">
                @foreach (var device in devices)
                {
                    <div class="col-12 col-md-4 col-lg-3">
                        <div class="card border-primary shadow-lg rounded bg-transparent" style="cursor: pointer;" @onclick="() => ShowDeviceDetails(device)">
                            <div class="card-body">
                                <h5 class="card-title">@device.Platform</h5>
                                <h5 class="card-title">@device.CreationTime</h5>
                                <h5 class="card-title">@device.Name</h5>
                            </div>
                        </div>
                    </div>
                }
            </div>
            <button class="btn btn-lg btn-warning add-device-btn" style="position:fixed; right:24px; bottom:24px;" @onclick="ShowAddDeviceModal">+</button>
        </div>
    </div>
</div>

@if (showAddDeviceModal)
{
    <div class="modal fade show bg-transparent" tabindex="-1" style="display: block;" aria-labelledby="addDeviceModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">

                <div class="modal-header">
                        <h5 class="modal-title">@Localizer["Add device"]</h5>
                </div>
                <div class="modal-body">
                    <ul class="nav nav-tabs w-100" id="apiTab" role="tablist">
                        <li class="nav-item" role="presentation">
                            <a class="nav-link " @onclick="() => SetModalActiveTab(1)" id="tahomaTab" data-bs-toggle="tab" href="#tahoma" role="tab" aria-controls="tahoma" aria-selected="true">Tahoma API</a>
                        </li>
                        <li class="nav-item" role="presentation">
                            <a class="nav-link " @onclick="() => SetModalActiveTab(2)" id="tuyaTab" data-bs-toggle="tab" href="#tuya" role="tab" aria-controls="tuya" aria-selected="false">Tuya API</a>
                        </li>
                    </ul>
                    <div class="tab-content" id="apiTabContent">
                        <div class="tab-pane fade @GetModalTabClass(1)" id="tahoma" role="tabpanel" aria-labelledby="tahomaTab">
                                    <h5>Tahoma @Localizer["Device form"]</h5>
                            <label for="apiType">API Type:</label>
                            <select class="form-control" id="apiType" @bind="selectedApiType">
                                    <option value="online">@Localizer["Online"]</option>
                                    <option value="local">@Localizer["Local"]</option>
                            </select>
                            @if (selectedApiType == "online")
                            {
                                <label for="somfyDeviceName">@Localizer["Device name"]:</label>
                                <input type="text" class="form-control" id="somfyDeviceName" @bind="somfyDeviceName" placeholder="@Localizer["Enter device name"]" />
                                <label for="homeURL" class="mt-2">@Localizer["Region"]:</label>
                                <select class="form-control" id="homeURL" @bind="homeURL">
                                    <option value="" disabled selected>@Localizer["Select a region"]</option>
                                    <option value="https://ha101-1.overkiz.com">ha101-1.overkiz.com (Europe, Middle East and Africa)</option>
                                    <option value="https://ha201-1.overkiz.com">ha201-1.overkiz.com (Asia and Pacific)</option>
                                    <option value="https://ha401-1.overkiz.com">ha401-1.overkiz.com (America)</option>
                                </select>
                                <label for="email">@Localizer["Email address"]:</label>
                                <input type="email" class="form-control" id="email" @bind="email" placeholder="example@sth.com" />
                                <label for="password">@Localizer["Password"]:</label>
                                <input type="password" class="form-control" id="password" @bind="password" placeholder="@Localizer["Enter your password"]" />
                            }
                            else if (selectedApiType == "local")
                            {
                                <div class="alert alert-warning mt-3">@Localizer["Only the online API is available."]</div>
                            }
                        </div>
                        <div class="tab-content" id="apiTabContent">
                            <div class="tab-pane fade @GetModalTabClass(2)" id="tuya" role="tabpanel" aria-labelledby="tuyaTab">
                                <h5>Tuya @Localizer["Device form"]</h5>
                                <label for="tuyaDeviceName">@Localizer["Device name"]:</label>
                                <input type="text" class="form-control" id="tuyaDeviceName" @bind="tuyaDeviceName" placeholder="@Localizer["Enter device name"]" />
                                <label for="region" class="mt-2">@Localizer["Region"]:</label>
                                <select class="form-control" id=" " @bind="region">
                                    <option value="" disabled selected>@Localizer["Select a region"]</option>
                                    <option value="44">EU</option>
                                    <option value="1">US</option>
                                    <option value="86">CN</option>
                                </select>
                                <label for="username">@Localizer["Username"]</label>
                                <input type="text" class="form-control" id="username" @bind="username" placeholder="@Localizer["Username"]" />
                                <label for="tuyaPassword">@Localizer["Password"]:</label>
                                <input type="password" class="form-control" id="tuyaPassword" @bind="tuyaPassword" placeholder="@Localizer["Enter your password"]" />
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                        <button type="button" class="btn btn-primary" @onclick="LoadEntities">@Localizer["Save device"]</button>
                        <button type="button" class="btn btn-secondary" @onclick="CloseAddDeviceModal">@Localizer["Close"]</button>
                            <div class="alert alert-warning mt-3">@Localizer["Only the online API is available."]</div>
                </div>
            </div>
        </div>
    </div>
}


@if (showEntityDetailsModal && selectedEntity != null)
{
    <div class="modal fade show bg-transparent" tabindex="-1" style="display: block;" aria-labelledby="entityDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@selectedEntity.Id</h5>
                    <button type="button" class="btn-close" @onclick="CloseEntityDetailsModal"></button>
                </div>
                <div class="modal-body">
                    <p><strong>Entity Name:</strong> @selectedEntity.Name</p>
                    <p><strong>ID:</strong> @selectedEntity.Id</p>
                </div>
                <div class="modal-footer">
                        <button type="button" class="btn btn-secondary" @onclick="CloseEntityDetailsModal">@Localizer["Close"]</button>
                </div>
            </div>
        </div>
    </div>
}

@if (showDeviceDetailsModal && selectedDevice != null)
{
    <div class="modal fade show" tabindex="-1" style="display: block;" aria-labelledby="deviceDetailsModalLabel" aria-hidden="true">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@selectedDevice.Platform</h5>
                    <h5 class="modal-title">@selectedDevice.CreationTime</h5>
                    <h5 class="modal-title">@selectedDevice.Name</h5>
                    <button type="button" class="btn-close" @onclick="CloseDeviceDetailsModal"></button>
                </div>
                <div class="modal-body">
                    @if(selectedDevice.Platform == "Somfy")
                    {
                        var somfyDevice = selectedDevice as Models.Device;
                        <p><strong>Device Name:</strong> @somfyDevice.Name</p>
                        <p><strong>Device Paltform:</strong> @somfyDevice.Platform</p>
                        <p><strong>Device Entity Count:</strong> @somfyDevice.SomfyEntities.Count()</p>
                    }
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" @onclick="CloseDeviceDetailsModal">Close</button>
                </div>
            </div>
        </div>
    </div>
}

@code {

    private int activeTab = 1;  
    private int modalActiveTab = 1;

    private bool showEntityDetailsModal = false;
    private bool showDeviceDetailsModal = false;
    private bool showAddDeviceModal = false;

    private string selectedApiType = "online";

    private Models.Entity selectedEntity;
    private Models.Device selectedDevice;

    private string tuyaStatus = "Active";

    private List<Models.Entity> entities = new();
    private List<Models.Device> devices = new();

    private string somfyDeviceName;
    private string tuyaDeviceName;

    private string homeURL;
    private string gatewayPin;
    private string email;
    private string password;

    private string username;
    private string region;
    private string tuyaPassword;

    private void ShowEntityDetailsModal(Models.Entity entity)
    {
        selectedEntity = entity;
        showEntityDetailsModal = true;
    }

    private void ShowDeviceDetailsModal(Models.Device device)
    {
        selectedDevice = device;
        showDeviceDetailsModal = true;
    }

    private void CloseEntityDetailsModal()
    {
        showEntityDetailsModal = false;
        selectedEntity = null;
    }

    private void CloseDeviceDetailsModal()
    {
        showDeviceDetailsModal = false;
        selectedDevice = null;
    }
    private void CloseAddDeviceModal()
    {
        showAddDeviceModal = false;
        selectedDevice = null;
    }

    private void SetActiveTab(int tabNumber)
    {
        activeTab = tabNumber;
    }

    private string GetTabClass(int tabNumber)
    {
        return activeTab == tabNumber ? "show active" : "";
    }
    private void SetModalActiveTab(int tabNumber)
    {
        modalActiveTab = tabNumber;
    }

    private string GetModalTabClass(int tabNumber)
    {
        return modalActiveTab == tabNumber ? "show active" : "";
    }

    private void ShowEntityDetails(Models.Entity entity)
    {
        selectedEntity = entity;
        showEntityDetailsModal = true;
    }

    private void ShowDeviceDetails(Models.Device device)
    {
        selectedDevice = device;
        showDeviceDetailsModal = true;
    }
    private void ShowAddDeviceModal()
    {
        showAddDeviceModal = true;
    }

    private async Task LoadEntities()
    {
        if (modalActiveTab == 1)
        {
            try
            {
                await AddDeviceService.GenerateSomfyTokens(email, password, homeURL);
                var device = await AddDeviceService.AddSomfyDeviceAsync(somfyDeviceName);
                devices.Add(device);
                foreach (var entity in device.SomfyEntities)
                {
                    entities.Add(entity);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
        else if (modalActiveTab == 2)
        {
            try
            {
                await AddDeviceService.GenerateTuyaTokens(username, tuyaPassword, region);
                var device = await AddDeviceService.AddTuyaDeviceAsync(tuyaDeviceName);
                devices.Add(device);
                foreach (var entity in device.TuyaEntities)
                {
                    entities.Add(entity);
                }
            }
            catch (Exception ex)
            {
                Console.WriteLine(ex.Message);
            }
        }
    }

    [Inject] private IStringLocalizer<AppResources> Localizer { get; set; }
    [Inject] private HttpClient HttpClient { get; set; }
}